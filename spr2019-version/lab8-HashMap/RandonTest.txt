Random Test:

Enter # strings to insert into the maps: 1000,000
--Stack Overflow -- couldn't add 1000000 strings of length 4.
class BSTMap: 0.93 sec
Java's Built-in TreeMap: 0.78 sec


Enter # strings to insert into the maps: 10,000,000
--Stack Overflow -- couldn't add 10000000 strings of length 4.
class BSTMap: 9.06 sec
Java's Built-in TreeMap: 6.48 sec

Enter # strings to insert into the maps: 30,000,000
--Stack Overflow -- couldn't add 30000000 strings of length 4.
class BSTMap: 25.82 sec
Java's Built-in TreeMap: 17.11 sec

MY QUESTION HERE:
why the relation seem to be linear but not logrithem ???
All the operations the BST should be log(n); ???





Increasing Order:

Enter # strings to insert into the maps: 1000000
--Stack Overflow -- couldn't add 1000000 strings.
--Stack Overflow -- couldn't add 1000000 strings.
Java's Built-in TreeMap: 0.67 sec
Java's Built-in HashMap: 0.66 sec

Enter # strings to insert into the maps: 10000000
--Stack Overflow -- couldn't add 10000000 strings.
--Stack Overflow -- couldn't add 10000000 strings.
Java's Built-in TreeMap: 11.20 sec
Java's Built-in HashMap: 4.00 sec



Enter # strings to insert into your MyHashMap: 3000000
class MyHashMap: 2.13 sec

Enter # strings to insert into Java's HashMap: 3000000
Java's Built-in HashMap: 0.87 sec

Enter # strings to insert into your MyHashMap: 1000000
class MyHashMap: 1.04 sec

Enter # strings to insert into Java's HashMap: 1000000
Java's Built-in HashMap: 0.31 sec

Enter # strings to insert into your MyHashMap: 2000000
class MyHashMap: 1.31 sec

Enter # strings to insert into Java's HashMap: 2000000
Java's Built-in HashMap: 0.63 sec



Enter # strings to insert into MyHashMap: 1000000
class MyHashMap: 1.19 sec

Enter # strings to insert into Java's HashMap: 1000000
Java's Built-in HashMap: 0.49 sec

Enter # strings to insert into MyHashMap: 3000000
class MyHashMap: 2.47 sec

Enter # strings to insert into Java's HashMap: 3000000
Java's Built-in HashMap: 1.45 sec